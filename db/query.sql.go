// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  name, email, age
) VALUES (
  $1, $2, $3
)
RETURNING id, name, email, age
`

type CreateUserParams struct {
	Name  string
	Email string
	Age   int32
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Name, arg.Email, arg.Age)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Age,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, name, email, age FROM users
WHERE id = $1
`

func (q *Queries) GetUser(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Age,
	)
	return i, err
}

const updateUserAges = `-- name: UpdateUserAges :exec
UPDATE users SET age = $2
WHERE id = $1
`

type UpdateUserAgesParams struct {
	ID  int32
	Age int32
}

func (q *Queries) UpdateUserAges(ctx context.Context, arg UpdateUserAgesParams) error {
	_, err := q.db.Exec(ctx, updateUserAges, arg.ID, arg.Age)
	return err
}
